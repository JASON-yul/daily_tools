1. ansible
参考文献：https://www.jianshu.com/p/9e58a598e448
sed -i 's/.*\(host_key_checking\)/\1/' /etc/ansible/ansible.cfg
[root@m01 /server/scripts]# cat one_key.sh 
ansible r1 -m yum -a "name=rsync state=installed" &&\
ansible r1 -m shell -a "useradd rsync"&&\
ansible r1 -m file -a "path=/backup state=directory owner=rsync group=rsync" &&\
ansible r1 -m copy -a "src=/etc/rsyncd.conf dest=/etc/rsyncd.conf" &&\
ansible n2 -m shell -a "echo rsync_backup:oldboy >/etc/rsync.password" &&\

ansible-playbook
参考文件：https://www.cnblogs.com/yanjieli/p/10969299.html

get_url模块：
下载远程url内容：ansible webservers -m get_url -a "url=https://10.2.2.2vue.tar.gz dest=/mnt/ mode=0755 force=yes"

yum、apt下载模块
ansible webservers -m yum -a "name=curl state=latest"
ansible webservers -m apt -a "pkg=curl state=latest"

cron模块
nsible webservers -m cron -a "name='testong' minute='2' job='ls'"
显示：
#Ansible: testong
2 * * * * ls

mount模块
ansible webservers -m mount -a "name=/mnt/data  src=/dev/mapper/data_disk1-data_disk1  fstype=ext4 opts=defaults  state=present"
显示：vim /etc/fstab
/dev/mapper/data_disk1-data_disk1 /mnt/data ext4 defaults 0 0

service模块：启动，停止等
ansible webservers -m service -a "name=nginx state=reloaded"
ansible webservers -m service -a "name=nginx state=stopped"
ansible webservers -m service -a "name=nginx state=restarted"

user模块
添加test用户：
ansible webservers -m user -a "name=test comment='john doe'"
comment参数：此参数用于指定用户的注释信息。
删除test用户
ansible webservers -m user -a "name=test state=absent remove=yes"
remove参数：当state的值设置为absent时，表示要删除远程主机中的用户。但是在删除用户时，不会删除用户的家目录等信息，这是因为remove参数的默认值为no，如果设置为yes，在删除用户的同时，会删除用户的家目录。
当 state=absent 并且 remove=yes 时，相当于执行 “userdel --remove” 命令


2. 通过jinja2过滤器,实现过滤查找功能
#] vim  find.yml
---
# Site Configuration
- hosts: webservers
  vars:
    filename: /etc/profile/jim
  tasks:
    - name: "shell"
      shell: echo {{ filename | basename }} >> /mnt/testshell
    - name: "shell"
      shell: echo {{ filename | dirname }} >>/mnt/testshell
      
  ]# ansible-playbook -i hosts site.yml
  ]# cat testshell
  jim
  /etc/profile

3. 判断执行脚本或命令输出结果是否为真
vim site.yml
---
# Site Configuration
- hosts: webservers
  vars:
    filename: /etc/profile/jim
  tasks:
    - name: "dflk"
      shell: echo $PATH
      register: foo_b          #注册变量。变量值为echo $PATH命令执行结果，0或非零
      ignore_errors: True      #无论对错都忽略
    - name: "lk"
      shell: echo "yes"
      when: foo_b.rc == 0       #判断上述变量的.rc值是否为0（真），为0则执行echo "yes"

]# ansible-playbook -i hosts site.yml -vvv   #执行此命令可看到“dflk”下命令的执行结果
 changed: [10.28.2.165] => {
    "cmd": "echo \"yes\"",{ 
.........
    }, 
    "rc": 0,                       #输出结果d的.rc值
......
    "stdout": "yes", 
    "stdout_lines": [
        "yes"
    ]
}



